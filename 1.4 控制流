//语句块顺序执行，控制流语句可帮助我们写出更复杂的执行路径
//while，不满足条件则会持续执行：
//打印范围内整数
#include <iostream>
int main()
{
	int sum = 0, val = 1;
	while (val <= 10) {
		sum += val;
		++val;//前缀递增运算符
	}
	std::cout << sum << std::endl;
	return 0;
}



//for循环：
#include <iostream>
int main()
{
	int sum = 0,
	int val = 1;
	for(int val = 1; val <= 10; ++val) //循环头：初始化语句、循环条件、表达式
		sum += val;//循环体
	
	std::cout << sum << std::endl;
	return 0;
}

//读取数量不定的输入数据
#include <iostream>
int main()
{
	int sum = 0, value = 0;
	while (std::cin >> value)
		sum += value;//等价于 sum = sum + value
	std::cout << sum << std::endl;
	return 0;
}

//if语句，连用值写了多少次
#include <iostream>
int main() {
	//currVal是我们正在统计的数；我们将读入的新值存入val
	int currVal = 0, val = 0;
	//读取第一个数，并确保确实有数据可以处理
	if (std::cin >> currVal) {
		int cnt = 1;
		while (std::cin >> val) {
			if (val == currVal)
				++cnt;
			else {
				std::cout << currVal << "occurs"
					<< cnt << "times" << std::endl;
				currVal = val;
				cnt = 1;
			}
		}
	}

}


